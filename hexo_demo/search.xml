<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VScode的使用</title>
    <url>/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="1、打开终端"><a href="#1、打开终端" class="headerlink" title="1、打开终端"></a>1、打开终端</h3><p><code>Ctrl + \</code></p>
<h3 id="2、打开开发者模式-检查"><a href="#2、打开开发者模式-检查" class="headerlink" title="2、打开开发者模式(检查)"></a>2、打开开发者模式(检查)</h3><p><code>Ctrl + Shift + I</code></p>
<span id="more"></span>

<h3 id="3、查找代码内容"><a href="#3、查找代码内容" class="headerlink" title="3、查找代码内容"></a>3、查找代码内容</h3><p><code>Ctrl + F</code></p>
<p><a href="https://www.bilibili.com/video/BV1Wh411U7R5">https://www.bilibili.com/video/BV1Wh411U7R5</a></p>
<h2 id="一、编辑器布局"><a href="#一、编辑器布局" class="headerlink" title="一、编辑器布局"></a>一、编辑器布局</h2><p>查看——编辑器布局</p>
<h2 id="二、git的分布式版本控制系统"><a href="#二、git的分布式版本控制系统" class="headerlink" title="二、git的分布式版本控制系统"></a>二、git的分布式版本控制系统</h2><h3 id="1、位于vscode侧边栏"><a href="#1、位于vscode侧边栏" class="headerlink" title="1、位于vscode侧边栏"></a>1、位于vscode侧边栏</h3><p>（可以实现类似于Sourcetree的操作）</p>
<h3 id="2、可用gitlens插件管理"><a href="#2、可用gitlens插件管理" class="headerlink" title="2、可用gitlens插件管理"></a>2、可用gitlens插件管理</h3><p>可以查看代码历史记录、查看branch及commit改动、</p>
<h2 id="四、智能感知"><a href="#四、智能感知" class="headerlink" title="四、智能感知"></a>四、智能感知</h2><p>css、html、json、php、</p>
<h3 id="1、首字母感应💖"><a href="#1、首字母感应💖" class="headerlink" title="1、首字母感应💖"></a>1、首字母感应💖</h3><p>例如（更多的可以自己尝试）</p>
<p><code>bg</code>：background</p>
<p><code>bgc</code>：background-color</p>
<h3 id="2、颜色感应"><a href="#2、颜色感应" class="headerlink" title="2、颜色感应"></a>2、颜色感应</h3><p>触碰时可自定义<strong>透明度</strong></p>
<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002143142797.png" alt="image-20211002143142797" style="zoom:67%;">

<p>3、等等</p>
<h2 id="五、Emmet语法💖"><a href="#五、Emmet语法💖" class="headerlink" title="五、Emmet语法💖"></a>五、Emmet语法💖</h2><blockquote>
<p>Emmet语法官方文档：<a href="https://docs.emmet.io/cheat-sheet/">https://docs.emmet.io/cheat-sheet/</a></p>
</blockquote>
<h3 id="1、！-Enter"><a href="#1、！-Enter" class="headerlink" title="1、！+ Enter"></a>1、！+ Enter</h3><p>HTML初始化</p>
<h3 id="2、div-n"><a href="#2、div-n" class="headerlink" title="2、div*n"></a>2、div<span style="background-color:pink;">*</span>n</h3><blockquote>
<!-- div*3 --> 

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>同类型兄弟间 相邻</p>
<h3 id="3、div-gt-p"><a href="#3、div-gt-p" class="headerlink" title="3、div&gt;p"></a>3、div<span style="background-color:yellow;">&gt;</span>p</h3><blockquote>
<!-- div>p -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>父子包含</p>
<h3 id="4、div-p"><a href="#4、div-p" class="headerlink" title="4、div+p"></a>4、div<span style="background-color:green;">+</span>p</h3><blockquote>
<!-- div+p -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>不同类型之间 相邻</p>
<h3 id="5、div-✨"><a href="#5、div-✨" class="headerlink" title="5、div.   /    #  ✨"></a>5、div<span style="background-color:pink;">.</span><class_name>   /    <span style="background-color:red;">#</span><id_name>  ✨</id_name></class_name></h3><blockquote>
<!-- div.news -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<!-- div#news -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;news&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>快速生成带有名字的标签</p>
<h3 id="6、同时选择上下多行的同一列内容"><a href="#6、同时选择上下多行的同一列内容" class="headerlink" title="6、同时选择上下多行的同一列内容"></a>6、同时选择上下多行的同一列内容</h3><img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002121920459.png" alt="image-20211002121920459" style="zoom:67%;">

<p><code>Shift + Alt + 拖动要控制的行数</code></p>
<h3 id="示例：👀"><a href="#示例：👀" class="headerlink" title="示例：👀"></a>示例：👀</h3><blockquote>
<!-- ul.header>(li>a.link)*5 -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<!-- div.search>div.logo{登录}+input[placeholder="keywords"] -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;keywords&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<!-- ul>li.content$*5 -->

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;content1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;content2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;content3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;content4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;content5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在设置中搜索Emmet，然后勾选：</p>
<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002230949346.png" alt="image-20211002230949346" style="zoom: 67%;">



<h2 id="六、vscode插件"><a href="#六、vscode插件" class="headerlink" title="六、vscode插件"></a>六、vscode插件</h2><blockquote>
<p> <a href="https://marketplace.visualstudio.com/search?target=VSCode&category=All%20categories&sortBy=Installs">vscode插件下载排行榜</a></p>
</blockquote>
<h3 id="1、通用插件"><a href="#1、通用插件" class="headerlink" title="1、通用插件"></a>1、通用插件</h3><h4 id="①、Auto-Rename-Tag"><a href="#①、Auto-Rename-Tag" class="headerlink" title="①、Auto Rename Tag"></a>①、Auto Rename Tag</h4><p>&emsp;&emsp;对称标签前后自动同步修改</p>
<h4 id="②、Auto-Close-Tag"><a href="#②、Auto-Close-Tag" class="headerlink" title="②、Auto Close Tag"></a>②、Auto Close Tag</h4><p>&emsp;&emsp;对称标签前后自动同步删除</p>
<h4 id="③、Prettier-Code-formatter"><a href="#③、Prettier-Code-formatter" class="headerlink" title="③、Prettier-Code formatter"></a>③、Prettier-Code formatter</h4><p>&emsp;&emsp;保存时自动格式化代码</p>
<h4 id="④、Bracket-Pair-Colorizer-2"><a href="#④、Bracket-Pair-Colorizer-2" class="headerlink" title="④、Bracket Pair Colorizer 2"></a>④、Bracket Pair Colorizer 2</h4><p>&emsp;&emsp;括号高亮</p>
<h4 id="④、Live-Server"><a href="#④、Live-Server" class="headerlink" title="④、Live Server"></a>④、Live Server</h4><p>&emsp;&emsp;实时预览</p>
<h4 id="⑥、vscode-icons"><a href="#⑥、vscode-icons" class="headerlink" title="⑥、vscode-icons"></a>⑥、vscode-icons</h4><p>&emsp;&emsp;文件图标样式</p>
<h4 id="⑦、Atom-One-Dark-Theme"><a href="#⑦、Atom-One-Dark-Theme" class="headerlink" title="⑦、Atom One Dark Theme"></a>⑦、Atom One Dark Theme</h4><p>&emsp;&emsp;个人比较喜欢的主题（IDEA里面也可以下载该主题）</p>
<h4 id="⑧、koroFileHeader"><a href="#⑧、koroFileHeader" class="headerlink" title="⑧、koroFileHeader"></a>⑧、koroFileHeader</h4><p>&emsp;&emsp;项目或者作者基本信息声明文档File Heade</p>
<blockquote>
<p><strong>设置：</strong></p>
<p>在设置里搜索file header，然后</p>
</blockquote>
<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002215501952.png" alt="image-20211002215501952" style="zoom:67%;">

<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002221853172.png" alt="image-20211002221853172" style="zoom:67%;">

<blockquote>
<p><strong>使用：</strong></p>
<p>&emsp;&emsp;在需要File Header时，输入Ctrl + Alt + i 即可</p>
<p>使用该快捷键会自动在文件的最前面生成File Header信息</p>
</blockquote>
<h3 id="2、学习使用插件"><a href="#2、学习使用插件" class="headerlink" title="2、学习使用插件"></a>2、学习使用插件</h3><h4 id="HTML、CSS："><a href="#HTML、CSS：" class="headerlink" title="HTML、CSS："></a>HTML、CSS：</h4><p>&emsp;&emsp;1.CSS Peek: 快速查看class和id对应的CSS代码</p>
<p>&emsp;&emsp;2.Icon Fonts: 字体图标库输入提示</p>
<p>&emsp;&emsp;3.HTML Boilerplate: HTML初始化兼容性模板</p>
<p>等等……后续更新😂</p>
<h2 id="七、设置"><a href="#七、设置" class="headerlink" title="七、设置"></a>七、设置</h2><h4 id="查看所有命令-搜索"><a href="#查看所有命令-搜索" class="headerlink" title="查看所有命令(搜索)"></a>查看所有命令(搜索)</h4><p><code>Ctrl + Shift + P</code></p>
<p>例： 更改settings.json文件</p>
<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002145154038.png" alt="image-20211002145154038" style="zoom:50%;">

<p>1、鼠标滚轮改变字体大小</p>
<p>选择上面的<strong>Open Settings(JSON)</strong></p>
<p>在里面加入一行：</p>
<p><code>&quot;editor.mouseWheelZoom&quot;: true</code></p>
<img src="/2021/10/09/VScode%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211002194608594.png" alt="image-20211002194608594" style="zoom:67%;">
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/2021/10/09/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="一、Linux认知"><a href="#一、Linux认知" class="headerlink" title="一、Linux认知"></a>一、Linux认知</h2><h3 id="1、重点"><a href="#1、重点" class="headerlink" title="1、重点"></a>1、重点</h3><p>&emsp;&emsp;关于怎么使用Linux命令及其附加命令 例： -a  、-l  等等</p>
<p>&emsp;&emsp;①✨<code>whatis ___</code>✨  ： 简要概述。<span style="background-color: red;">注意</span>：使用whatis目录前要先检查更新，即</p>
<p>root权限下，使用makewhatis手动更新（OS7版本以下），使用mandb进行更新（OS7</p>
<p>及其以上）</p>
<span id="more"></span>

<blockquote>
<p>例： <code>whatis ls</code>、<code>whatis cd</code>  、<code>whatis pwd</code>、等等</p>
</blockquote>
<p>&emsp;&emsp;②<code>help ___</code>  ： 详细概述</p>
<h3 id="2、自动补全快捷键"><a href="#2、自动补全快捷键" class="headerlink" title="2、自动补全快捷键"></a>2、自动补全快捷键</h3><p>&emsp;&emsp;table键</p>
<h3 id="3、其他"><a href="#3、其他" class="headerlink" title="3、其他"></a>3、其他</h3><p>① <strong>$</strong>&emsp;表示普通用户，#表示root用户(即：管理员身份)</p>
<p>② *****&emsp; 表示所有</p>
<p>例： <code>*.txt</code></p>
<p>③ <strong>^</strong> &emsp;表示以什么开头</p>
<p>④<code>clean</code>&emsp; 清屏操作</p>
<p>⑤ 文件权限</p>
<blockquote>
<p>r ：可读read </p>
<p>w ：可写write</p>
<p>x ：可执行excuse</p>
</blockquote>
<p>⑥ <code>tree</code>&emsp;显示目录结构</p>
<h2 id="二、切换目录、查看、查找、返回命令💖"><a href="#二、切换目录、查看、查找、返回命令💖" class="headerlink" title="二、切换目录、查看、查找、返回命令💖"></a>二、切换目录、查看、查找、返回命令💖</h2><h3 id="1、切换目录"><a href="#1、切换目录" class="headerlink" title="1、切换目录"></a>1、切换目录</h3><p>&emsp;&emsp;cd <folder_name> 切换到某一目录下。例<code>cd ./test.txt</code>、<code>cd ~/</code> 、<code>cd ./*.txt</code>等等</folder_name></p>
<blockquote>
<p>特殊：</p>
<p>&emsp;&emsp;<code>cd </code> 切换到home目录</p>
<p>&emsp;&emsp;<code>cd .. </code> 切换到上一级目录</p>
<p>&emsp;&emsp;<code>cd - </code> 返回上次使用的目录</p>
<p>cd home</p>
</blockquote>
<p>&emsp;&emsp; . . /表示同一等级目录；   . /表示当前目录  ；    <span style="background-color: yellow;"><del>/</del></span> 表示 <span style="color: red;">home目录</span> （即：/    与    /home/lencamo/  等效）； <span style="background-color: yellow;">/</span> 表示 <span style="color: red;">根目录</span>。</p>
<br>

<h3 id="2、查看位置"><a href="#2、查看位置" class="headerlink" title="2、查看位置"></a>2、查看位置</h3><p>&emsp;&emsp;①<code>ls</code>&emsp;只是<strong>简单</strong>的列出<u>当前目录</u>下的所以文件的文件名。例：<code>ls / </code>表示列出根目录</p>
<blockquote>
<p>列出文件🎉<strong>详细</strong>信息（文件权限、<strong>创建时间</strong>/日期等等）</p>
<p>&emsp;&emsp;ls -l &emsp;乱序排列列出所有文件</p>
<p>&emsp;&emsp;ls -lt &emsp;按时间排列列出所有文件</p>
<p>&emsp;&emsp;ls -l  <file_name> &emsp;某个文件</file_name></p>
</blockquote>
<img src="/2021/10/09/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20211009170800075.png" alt="image-20211009170800075" style="zoom:80%;">

<br>

<p>&emsp;&emsp;②<code>ls -a</code>&emsp;只是<strong>简单</strong>的列出<u>当前目录</u>下的所以文件的文件名（包括隐藏文件，即 . 开头的文件）</p>
<blockquote>
<p>列出文件🎉<strong>详细</strong>信息（文件权限、<strong>创建时间</strong>/日期等等）</p>
<p>&emsp;&emsp;ll 或者 ls -la&emsp;&emsp;详细的列出所以的文件(包括. 开头的隐藏)</p>
</blockquote>
<br>

<p>&emsp;&emsp;③<code>pwd</code>   列出当前所处的文件目录位置</p>
<h3 id="3、查看内容"><a href="#3、查看内容" class="headerlink" title="3、查看内容"></a>3、查看内容</h3><p>&emsp;&emsp;cat   查看文件内容   、  合并文件</p>
<blockquote>
<p>cat first.txt</p>
<p>cat hello.txt world.txt &gt;helloworld.txt</p>
</blockquote>
<br>

<p><code>more &lt;file_name&gt;</code>  分页查看文件内容（按空格键显示下一页，按b键显上一页，按q键退出）。</p>
<br>

<p><code>cat -n &lt;file_name&gt;</code>  查看第n行的文件内容</p>
<p><code>head -n &lt;file_name&gt;</code>    查看前n行的文件内容</p>
<p><code>tail -n &lt;file_name&gt;</code>   查看后n行的文件内容</p>
<h3 id="4、查找命令"><a href="#4、查找命令" class="headerlink" title="4、查找命令"></a>4、查找命令</h3><p><code>find &lt;file_name&gt;</code>  查找文件夹/文件</p>
<p><code>grep &lt;search_content&gt; &lt;search_file_name&gt;</code>  查找内容</p>
<p><code>whereis ___</code>   查找文件所在目录   /     which 命令的文件位置</p>
<h2 id="三、新建、复制、粘贴命令💖"><a href="#三、新建、复制、粘贴命令💖" class="headerlink" title="三、新建、复制、粘贴命令💖"></a>三、新建、复制、粘贴命令💖</h2><h3 id="1、新建"><a href="#1、新建" class="headerlink" title="1、新建"></a>1、新建</h3><p>mkdir   创建<span style="background-color: pink;">文件夹</span></p>
<p>touch   创建<span style="background-color: yellow;">文件 </span>、 更新访问时间</p>
<p>echo    创建带有内容的文件、打印内容</p>
<blockquote>
<p>例：echo “hello world! my friend.” &gt;first.txt</p>
</blockquote>
<h3 id="2、删除"><a href="#2、删除" class="headerlink" title="2、删除"></a>2、删除</h3><p>rmdir 删除空文件夹</p>
<p>rm  删除<span style="background-color: yellow;">文件</span>（带y/n 确认提示）</p>
<p>rm -r  递归删除/删除<span style="background-color: pink;">文件夹</span>（带y/n 确认提示） </p>
<p>rm -f   强制删除（文件）（<strong>不带</strong>y/n 确认提示）</p>
<p>rm -rf   强制递归删除（文件夹）（<strong>不带</strong>y/n 确认提示）</p>
<h3 id="3、复制"><a href="#3、复制" class="headerlink" title="3、复制"></a>3、复制</h3><p>cp&emsp;拷贝<span style="background-color: yellow;">文件</span></p>
<p>cp -r &emsp; 拷贝<span style="background-color: pink;">文件夹</span></p>
<h3 id="4、剪切、重命名"><a href="#4、剪切、重命名" class="headerlink" title="4、剪切、重命名"></a>4、剪切、重命名</h3><p>mv 移动或者重命名(剪切到当前文件夹)  / 剪切 文件或文件夹</p>
<blockquote>
<p>mv a.txt &lt;要移动的目录v&gt;</p>
<p>mv a.txt b.txt     </p>
</blockquote>
<h2 id="四、文本编辑"><a href="#四、文本编辑" class="headerlink" title="四、文本编辑"></a>四、文本编辑</h2><h3 id="1、vi"><a href="#1、vi" class="headerlink" title="1、vi"></a>1、vi</h3><p><code>vi  &lt;file_name&gt;</code></p>
<blockquote>
<p>使用时： 按i键表示进入编辑模式，按ESC键表示退出编辑模式，:wq</p>
</blockquote>
<h3 id="2、echo"><a href="#2、echo" class="headerlink" title="2、echo"></a>2、echo</h3><p><code>echo &lt;content_massage&gt; &gt;&gt; &lt;file_name&gt;</code>  在文件内容后面继续加入一些content_massage</p>
<p><code>echo &lt;content_massage&gt; &gt; &lt;file_name&gt;</code>    覆盖文件中的内容</p>
<h2 id="五、压缩、解压、创建快捷方式"><a href="#五、压缩、解压、创建快捷方式" class="headerlink" title="五、压缩、解压、创建快捷方式"></a>五、压缩、解压、创建快捷方式</h2><p>&emsp;&emsp;-z：打包同时压缩✨</p>
<blockquote>
<p> <strong>-c</strong>：产生.tar 打包文件</p>
<p> <strong>-x</strong>：解压.tar文件</p>
<p> <strong>-t</strong>：查看压缩包内容</p>
</blockquote>
<p>&emsp;&emsp;-v：显示详细信息verbose</p>
<p>&emsp;&emsp;-f：指定压缩后的文件名file</p>
<h3 id="1、tar"><a href="#1、tar" class="headerlink" title="1、tar"></a>1、tar</h3><blockquote>
<p>解压、压缩  .tar.gz 的文件 </p>
</blockquote>
<p><strong>打包压缩的语法</strong>：</p>
<p>tar <span style="color: red;">z<span style="color: green;">c</span>vf </span>&lt;压缩包文件名&gt;  [要放的地方]</p>
<p><strong>解包解压的语法</strong>：</p>
<p>tar <span style="color: red;">z<span style="color: green;">x</span>vf</span> &lt;压缩包文件名&gt;  [要放的地方]</p>
<p><strong>查看压缩包内容：</strong></p>
<p>tar <span style="color: red;"><span style="color: green;">t</span>f</span> &lt;压缩包文件名&gt; </p>
<br>

<h3 id="2、-zip"><a href="#2、-zip" class="headerlink" title="2、.zip"></a>2、.zip</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">解压：unzip FileName.zip</span><br><span class="line">压缩：zip FileName.zip DirName</span><br></pre></td></tr></table></figure>

<h3 id="3、-rar"><a href="#3、-rar" class="headerlink" title="3、.rar"></a>3、.rar</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">解压：rar x FileName.rar</span><br><span class="line">压缩：rar a FileName.rar DirName</span><br></pre></td></tr></table></figure>

<h3 id="4、软链接（快捷方式）"><a href="#4、软链接（快捷方式）" class="headerlink" title="4、软链接（快捷方式）"></a>4、软链接（快捷方式）</h3><p><code>ln &lt;file_name&gt;  &lt;file_name&gt;</code> &emsp;创建软链接</p>
<h2 id="六、关机、重启、注销"><a href="#六、关机、重启、注销" class="headerlink" title="六、关机、重启、注销"></a>六、关机、重启、注销</h2><p>reboot   重启</p>
<p>init 6</p>
<br>

<p>halt  关机</p>
<p>init 0</p>
<br>

<p>logout 注销</p>
<h2 id="七、网络、性能、系统信息、内存"><a href="#七、网络、性能、系统信息、内存" class="headerlink" title="七、网络、性能、系统信息、内存"></a>七、网络、性能、系统信息、内存</h2><p>ifconfig   查看网络信息（ip地址）</p>
<p>ping 测试网络连通</p>
<br>

<p>top 任务管理器</p>
<p>kill -s name/pid   杀死进程 </p>
<br>

<p>df -h -T 查看磁盘内存情况</p>
<br>

<p>chkconfig –list 列出系统服务</p>
<p>service &lt;服务名&gt;  status/start/stop/restart   服务状态、启动/终止/重启服务</p>
<p>systemctl status/start/stop/restart &lt;服务名&gt;     服务状态、启动/终止/重启服务</p>
<p>systemctl enable &lt;服务名&gt;   开启开机自启动</p>
<p>systemctl disable &lt;服务名&gt;   关闭开机自启动</p>
<br>

<p>date  查看时间</p>
<p>cal   查看日历</p>
<p>netstat  显示网络状态信息</p>
<h2 id="八、友链"><a href="#八、友链" class="headerlink" title="八、友链"></a>八、友链</h2><blockquote>
<p>&emsp;&emsp;<a href="https://www.freecplus.net/94103ae45b9048a7a60b6aca31f57a41.html">相关文档</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux基础</category>
      </categories>
      <tags>
        <tag>Linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware搭建Linux结点</title>
    <url>/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/</url>
    <content><![CDATA[<p>&emsp;&emsp;关于下载：</p>
<blockquote>
<p>①vmware安装：(<a href="https://www.vmware.com/">https://www.vmware.com/</a>) </p>
<p>②Linux镜像节点：<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华开源镜像站</a>  、 <a href="https://mirrors.163.com/">网易开源镜像站</a></p>
</blockquote>
<p>&emsp;&emsp;💖VMware搭建Linux节点：</p>
<span id="more"></span>

<blockquote>
<p>下面演示时使用的是<span style="background-color:yellow;">桥接模式</span>，从而搭建出一个在局域网中相对独立的Linux操作系统。</p>
</blockquote>
<br>

<h2 id="一、如何获得自己电脑的ip（WiFi的ip）"><a href="#一、如何获得自己电脑的ip（WiFi的ip）" class="headerlink" title="一、如何获得自己电脑的ip（WiFi的ip）"></a>一、如何获得自己电脑的ip（WiFi的ip）</h2><h3 id="1、通过cmd命令查看"><a href="#1、通过cmd命令查看" class="headerlink" title="1、通过cmd命令查看"></a>1、通过cmd命令查看</h3><p><code>ipconfig</code></p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170315054.png" alt="image-20211009170315054" style="zoom:50%;">

<h3 id="2、直接点击WLAN查看"><a href="#2、直接点击WLAN查看" class="headerlink" title="2、直接点击WLAN查看"></a>2、直接点击WLAN查看</h3><img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170329694.png" alt="image-20211009170329694" style="zoom:50%;">

<p>&emsp;&emsp;&emsp;&emsp;得到：</p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170340567.png" alt="image-20211009170340567" style="zoom:50%;">

<br>

<h2 id="二、搭建Linux节点"><a href="#二、搭建Linux节点" class="headerlink" title="二、搭建Linux节点"></a>二、搭建Linux节点</h2><p>&emsp;&emsp;首先要安装VMware、Centos，安装过程自行解决（我常用自定义安装）。但安装过程要特别注意下面两点：</p>
<p>①模式要选择 <strong>桥接模式</strong></p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170411604.png" alt="image-20211009170411604" style="zoom:50%;">

<p>②root密码设置要牢记（后面要设置的用户和密码为开机密码）</p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170421908.png" alt="image-20211009170421908" style="zoom:50%;">

<h3 id="1、自动为Centos配置一个静态ip"><a href="#1、自动为Centos配置一个静态ip" class="headerlink" title="1、自动为Centos配置一个静态ip"></a>1、自动为Centos配置一个静态ip</h3><p>&emsp;&emsp;在安装好的Centos中鼠标右键——&gt;打开终端；然后进行下面的操作</p>
<p><strong>①切换到root模式</strong></p>
<p><code>su root</code></p>
<p><strong>②获得一个静态ip</strong></p>
<p><code>dhclient</code></p>
<p><code>ifconfig </code></p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170439518.png" alt="image-20211009170439518" style="zoom:67%;">

<blockquote>
<p>显然：</p>
<p>宿主机局域网ip（自己连接的WiFi地址)：192.168.10.13</p>
<p>Centos配置的静态ip：192.68.10.17</p>
<p>👀在同一网段。所以：✨如果更换WiFi，局域网的网段可能不是<strong>10</strong>，则需要另外打造一个节点✨。所以，打造多节点环境是非常必要的。</p>
</blockquote>
<p><strong>③配置静态ip网卡</strong></p>
<p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p>
<p>i    （进入编辑模式：开始编辑ifcfg-ens33文件）</p>
<img src="/2021/10/09/VMware%E6%90%AD%E5%BB%BALinux%E7%BB%93%E7%82%B9/image-20211009170457650.png" alt="image-20211009170457650">



<blockquote>
<p>关于DNS服务器设置，我上面用的是国内腾讯云旗下的Public DNS+的免费DNS解析服务：119.29.29.29</p>
<p>当然国外也有许多免费的DNS解析服务，比如：谷歌的Google Public DNS：8.8.8.8</p>
<p>更多内容可以参考：<a href="https://www.techug.com/post/free-dns-server-ip-list.html">https://www.techug.com/post/free-dns-server-ip-list.html</a></p>
</blockquote>
<p>按下Esc键   （退出编辑模式）</p>
<p>:wq         （安全退出）</p>
<br>

<p><code>systemctl restart network.service</code>    （重启服务）</p>
<p><strong>④与宿主机互通</strong>（当然各个节点之间也可以互通）</p>
<p><code>ping 192.168.10.13</code>     （宿主机ip）</p>
<p><code>ping www.baidu.com</code></p>
<blockquote>
<p>用数据参数，即为成功联网。</p>
</blockquote>
<br>

<h2 id="三、结束语"><a href="#三、结束语" class="headerlink" title="三、结束语"></a>三、结束语</h2><p>&emsp;&emsp;更多学习笔记可以查看我的《web服务器》做的学习笔记：</p>
<p><strong>&emsp;&emsp;重点信息：</strong></p>
<blockquote>
<p>①没有设置root用户，默认用户名为root</p>
<p>②root密码</p>
<p>③搭建的Centos节点地址192.168.10.17</p>
</blockquote>
<br>

<h2 id="三、可能遇到的问题"><a href="#三、可能遇到的问题" class="headerlink" title="三、可能遇到的问题"></a>三、可能遇到的问题</h2><h4 id="1、鼠标移动不顺畅"><a href="#1、鼠标移动不顺畅" class="headerlink" title="1、鼠标移动不顺畅"></a>1、鼠标移动不顺畅</h4><h4 id="2、等等"><a href="#2、等等" class="headerlink" title="2、等等"></a>2、等等</h4><br>

<h2 id="四、友链"><a href="#四、友链" class="headerlink" title="四、友链"></a>四、友链</h2><blockquote>
<p>学习视频：<a href="https://www.bilibili.com/video/BV1bA411b7vs">https://www.bilibili.com/video/BV1bA411b7vs</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux基础</category>
      </categories>
      <tags>
        <tag>Linux结点</tag>
      </tags>
  </entry>
  <entry>
    <title>我与hexo的相遇</title>
    <url>/2021/09/03/%E6%88%91%E4%B8%8Ehexo%E7%9A%84%E7%9B%B8%E9%81%87/</url>
    <content><![CDATA[<p>&emsp;&emsp; 自半年前搭建hexo成功后，就一直没有使用hexo来写一些文章，很是遗憾。但今天我想说的是：</p>
<blockquote>
<p>我又回来了😎, —-&gt; 🎉🎉🎉</p>
</blockquote>
<p>&emsp;&emsp; 当然我对这个个人网站的定下的方向也很明确：<span style="background-color: yellow;">写一些作品合集、系列文章</span>。</p>
<span id="more"></span>

<p><img src="/2021/09/03/%E6%88%91%E4%B8%8Ehexo%E7%9A%84%E7%9B%B8%E9%81%87/%E5%BE%AE%E7%AC%91.jpg" alt="微笑"></p>
<p>&emsp;&emsp;相对于博客园：(<a href="https://www.cnblogs.com/lencamo/">https://www.cnblogs.com/lencamo/</a> ) 的小打小闹，我的hexo博客可能更像一个长期的工程，每一项工程都是一个合集/一个系列；我相信在与hexo的相处中能够<code>不断的学习</code>，<code>不断的分享</code>，<code>不断的进步</code>。</p>
<p>&emsp;&emsp;刚把得！! 💪💪💪</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA的使用</title>
    <url>/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>&emsp;&emsp;eclipse与IDEA一样，是我们学习java路上的常用的开发软件，只不过学校常用的是eclipse罢了。</p>
<p>因此关于eclipse我就不做过多的介绍。</p>
<p>&emsp;&emsp;注意： 本人用的是<strong>IDEA2021.2.2</strong></p>
<span id="more"></span>

<p><a href="https://www.bilibili.com/video/BV1Sq4y1o7JR">https://www.bilibili.com/video/BV1Sq4y1o7JR</a></p>
<h2 id="一、项目整体认知"><a href="#一、项目整体认知" class="headerlink" title="一、项目整体认知"></a>一、项目整体认知</h2><p>&emsp;&emsp;个人通常将自己的项目，分别放到自己建的<strong>eclipse文件夹</strong>或者<strong>IDEA文件夹</strong>中。</p>
<h4 id="1、比较"><a href="#1、比较" class="headerlink" title="1、比较"></a>1、比较</h4><table>
<thead>
<tr>
<th align="center">eclipse中</th>
<th align="center"></th>
<th align="center">IDEA中</th>
</tr>
</thead>
<tbody><tr>
<td align="center">workplace</td>
<td align="center">相当于—&gt;</td>
<td align="center">project</td>
</tr>
<tr>
<td align="center">project</td>
<td align="center">相当于—&gt;</td>
<td align="center">module</td>
</tr>
</tbody></table>
<h4 id="图解："><a href="#图解：" class="headerlink" title="图解："></a>图解：</h4><table>
<thead>
<tr>
<th align="center">eclipse中</th>
<th align="center"></th>
<th align="center">IDEA中</th>
</tr>
</thead>
<tbody><tr>
<td align="center">新建项目<span style="background-color: yellow;">workplace</span><img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001210724315.png" alt="image-20211001210724315" style="zoom:50%;"></td>
<td align="center">相当于</td>
<td align="center">新建项目<span style="background-color: yellow;">project</span><img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001211244491.png" alt="image-20211001211244491" style="zoom:50%;"></td>
</tr>
<tr>
<td align="center">新建工程<span style="background-color: pink;">project</span><img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001215341911.png" alt="image-20211001215341911" style="zoom:50%;"></td>
<td align="center">相当于</td>
<td align="center">新建工程<span style="background-color: pink;">module</span><img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001215502196.png" alt="image-20211001215502196" style="zoom:50%;"></td>
</tr>
</tbody></table>
<h4 id="2、out文件夹"><a href="#2、out文件夹" class="headerlink" title="2、out文件夹"></a>2、out文件夹</h4><p>新生成的out文件夹是用来存放.java文件编译后的字节码文件</p>
<h4 id="3、如何删除模块"><a href="#3、如何删除模块" class="headerlink" title="3、如何删除模块"></a>3、如何删除模块</h4><p>先remove，然后才能delete</p>
<h2 id="二、设置"><a href="#二、设置" class="headerlink" title="二、设置"></a>二、设置</h2><blockquote>
<p>要想使设置：</p>
<p>&emsp;&emsp;先apple，然后再ok。</p>
</blockquote>
<h4 id="1、更换主题、字体大小、字体颜色（我觉得原版的还行，就没瞎折腾）"><a href="#1、更换主题、字体大小、字体颜色（我觉得原版的还行，就没瞎折腾）" class="headerlink" title="1、更换主题、字体大小、字体颜色（我觉得原版的还行，就没瞎折腾）"></a>1、更换主题、字体大小、字体颜色（我觉得原版的还行，就没瞎折腾）</h4><p>略</p>
<h4 id="2、Ctrl-mouse滚轮-来改变字体大小✨"><a href="#2、Ctrl-mouse滚轮-来改变字体大小✨" class="headerlink" title="2、Ctrl + mouse滚轮  来改变字体大小✨"></a>2、Ctrl + mouse滚轮  来改变字体大小✨</h4><p>Setting——Editor——General——（<em>Mouse control</em>）</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001225914505.png" alt="image-20211001225914505" style="zoom:50%;">



<h4 id="3、自动import所使用的类-接口对应的库类java包-✨"><a href="#3、自动import所使用的类-接口对应的库类java包-✨" class="headerlink" title="3、自动import所使用的类/接口对应的库类java包  ✨"></a>3、自动import所使用的类/接口对应的库类java包  ✨</h4><p>（手动导包快捷键：Alt + Enter）</p>
<p>Setting——Editor——General——Auto Import——（<em>java</em>）</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001230009507.png" alt="image-20211001230009507" style="zoom:50%;">

<p>延展：关于合并为.*，例<code>java.util.*</code>;</p>
<p>Setting——Editor——Code Editing——Java——</p>
<h4 id="4、鼠标悬浮与显示相关documentation"><a href="#4、鼠标悬浮与显示相关documentation" class="headerlink" title="4、鼠标悬浮与显示相关documentation"></a>4、鼠标悬浮与显示相关documentation</h4><p>Setting——Editor——Code Editing——（<em>Quick Documentation</em>）</p>
<p>默认有</p>
<h4 id="5、忽略大小写，输入时仍然可以提示可能使用的相关属性✨"><a href="#5、忽略大小写，输入时仍然可以提示可能使用的相关属性✨" class="headerlink" title="5、忽略大小写，输入时仍然可以提示可能使用的相关属性✨"></a>5、忽略大小写，输入时仍然可以提示可能使用的相关属性✨</h4><p>Setting——Editor——General——Code Completion——</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001224822848.png" alt="image-20211001224822848" style="zoom:50%;">

<h4 id="6、项目或者作者基本信息声明文档File-Header✨"><a href="#6、项目或者作者基本信息声明文档File-Header✨" class="headerlink" title="6、项目或者作者基本信息声明文档File Header✨"></a>6、项目或者作者基本信息声明文档File Header✨</h4><p>Setting——Editor——File and Code Templates</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001232122526.png" alt="image-20211001232122526" style="zoom:50%;">



<h4 id="7、行号"><a href="#7、行号" class="headerlink" title="7、行号"></a>7、行号</h4><p>Setting——Editor——General——Appearance——</p>
<h4 id="8、文件的Tabs设置为可多行显示"><a href="#8、文件的Tabs设置为可多行显示" class="headerlink" title="8、文件的Tabs设置为可多行显示"></a>8、文件的Tabs设置为可多行显示</h4><p>Setting——Editor——General——Editor Tabs——（<em>Appearance</em>）</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001225355405.png" alt="image-20211001225355405" style="zoom:50%;">

<h4 id="9、设置项目的编码格式为UTF-8模式✨"><a href="#9、设置项目的编码格式为UTF-8模式✨" class="headerlink" title="9、设置项目的编码格式为UTF-8模式✨"></a>9、设置项目的编码格式为UTF-8模式✨</h4><p>Setting——Editor——File Encoding——</p>
<p>（把所以的Encoding选择为UTF-8即可）</p>
<h4 id="10、自动编译（更改时与out文件下的字节码文件同步）✨"><a href="#10、自动编译（更改时与out文件下的字节码文件同步）✨" class="headerlink" title="10、自动编译（更改时与out文件下的字节码文件同步）✨"></a>10、自动编译（更改时与out文件下的字节码文件同步）✨</h4><p>Setting——Editor——Built，Execution，Deployment——Compile——</p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001233021804.png" alt="image-20211001233021804" style="zoom:50%;">

<h4 id="11、其他"><a href="#11、其他" class="headerlink" title="11、其他"></a>11、其他</h4><p>①分屏操作</p>
<p>略</p>
<p>②导入jar包💖</p>
<p>File——Project Setting——Libraries—— + ——Java——jar来源位置——选择要导入的module</p>
<p>③序列化版本号</p>
<p>略</p>
<p>④重命名</p>
<p>略</p>
<h2 id="三、常用快捷键"><a href="#三、常用快捷键" class="headerlink" title="三、常用快捷键"></a>三、常用快捷键</h2><h4 id="1、生成函数代码-构造方法、get-set方法、重写、equals-toString方法-新建文件👍"><a href="#1、生成函数代码-构造方法、get-set方法、重写、equals-toString方法-新建文件👍" class="headerlink" title="1、生成函数代码(构造方法、get/set方法、重写、equals/toString方法)/新建文件👍"></a>1、生成函数代码(构造方法、get/set方法、重写、equals/toString方法)/新建文件👍</h4><p><code>Alt + Insert</code></p>
<img src="/2021/10/09/IDEA%E7%9A%84%E4%BD%BF%E7%94%A8/image-20211001235459319.png" alt="image-20211001235459319" style="zoom:50%;">

<h4 id="2、创建对象自动生成变量-导包🍗"><a href="#2、创建对象自动生成变量-导包🍗" class="headerlink" title="2、创建对象自动生成变量/导包🍗"></a>2、创建对象自动生成变量/导包🍗</h4><p><code>Alt + Enter</code></p>
<p>例： new int [4]&emsp;&emsp;创建数组对象</p>
<pre><code>     new String&amp;emsp;&amp;emsp;创建String类对象
</code></pre>
<p>（ &emsp;new Demo1      创建自建类对象  ）</p>
<p>更多用法：<a href="https://juejin.cn/post/6844903893478932494">https://juejin.cn/post/6844903893478932494</a></p>
<h4 id="3、复制当前行或者选中的行到下面的一行"><a href="#3、复制当前行或者选中的行到下面的一行" class="headerlink" title="3、复制当前行或者选中的行到下面的一行"></a>3、复制当前行或者选中的行到下面的一行</h4><p><code>Ctrl + d</code></p>
<p>（常用于要输入/输出多个类似的语句时）</p>
<h4 id="4、将当前行上下移动"><a href="#4、将当前行上下移动" class="headerlink" title="4、将当前行上下移动"></a>4、将当前行上下移动</h4><p><code>Ctrl +  Shift +  ↑ / ↓</code></p>
<h4 id="5、搜索"><a href="#5、搜索" class="headerlink" title="5、搜索"></a>5、搜索</h4><p><code>Ctrl + n</code></p>
<h4 id="6、注释"><a href="#6、注释" class="headerlink" title="6、注释"></a>6、注释</h4><p>单行注释 <code>Ctrl + /</code></p>
<p>多行注释 <code>Ctrl +  Shift +  /</code></p>
<h4 id="10、缩进👏"><a href="#10、缩进👏" class="headerlink" title="10、缩进👏"></a>10、缩进👏</h4><p>向前 <code>table</code></p>
<p>向后  <code>Shift +table</code></p>
<h4 id="11、查看层层源码👍"><a href="#11、查看层层源码👍" class="headerlink" title="11、查看层层源码👍"></a>11、查看层层源码👍</h4><p>手动方式： 选择 ——&gt; Ctrl  ——&gt; 点击</p>
<p>快捷键方式：<code>Ctrl + Alt + ↑ / ↓</code></p>
<h2 id="五、常用代码模板"><a href="#五、常用代码模板" class="headerlink" title="五、常用代码模板"></a>五、常用代码模板</h2><p>&emsp;&emsp;打个比方，前面讲到的pswm、sout加回车，为IEDA默认有的代码模板</p>
<blockquote>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span></span>&#123;</span><br><span class="line">	System.out.<span class="built_in">println</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>&emsp;&emsp;位置：</p>
<blockquote>
<p> Setting——Editor——General——postfix completion （默认不能改）</p>
<p> Setting——Editor——Live Templates（能改，可自定义代码模板）</p>
</blockquote>
<h4 id="1、main方法"><a href="#1、main方法" class="headerlink" title="1、main方法"></a>1、main方法</h4><p>psvm</p>
<h4 id="2、输出语句"><a href="#2、输出语句" class="headerlink" title="2、输出语句"></a>2、输出语句</h4><p>sout</p>
<p>变量名.sout</p>
<p>其他:</p>
<p>①打印参数  outp</p>
<p>②打印方法名  outm</p>
<p>③打印变量   outv</p>
<h4 id="3、循环"><a href="#3、循环" class="headerlink" title="3、循环"></a>3、循环</h4><p><strong>ⅰ.普通for循环</strong></p>
<p>fori</p>
<p>数组/集合名.fori   正向</p>
<p>数组/集合名.forr   逆向</p>
<p><strong>ⅱ.增强for循环（用于变量数组、集合）</strong></p>
<p>iter</p>
<p>.for</p>
<h4 id="4、属性修饰符"><a href="#4、属性修饰符" class="headerlink" title="4、属性修饰符"></a>4、属性修饰符</h4><p>prsf  ：private static final</p>
<p>psf   public static final</p>
<h4 id="5、条件判断"><a href="#5、条件判断" class="headerlink" title="5、条件判断"></a>5、条件判断</h4><p>①判断为空</p>
<p>ifn</p>
<p>变量名.ifn</p>
<p>②判断不为空</p>
<p>inn</p>
<p>变量名.inn</p>
<h2 id="六、断点调试"><a href="#六、断点调试" class="headerlink" title="六、断点调试"></a>六、断点调试</h2><h4 id="1、下一步按钮"><a href="#1、下一步按钮" class="headerlink" title="1、下一步按钮"></a>1、下一步按钮</h4><p>①纯粹的下一步，不会进入任何方法</p>
<p>蓝色折线图标</p>
<p>②可以进入自定义方法，不可以进入系统类库方法(即查看源码方法：Ctrl + Alt + ↑/↓)</p>
<p>蓝色直线图标</p>
<p>③可以进入任何方法</p>
<p>红色直线图标</p>
<h4 id="2、断点间跳跃按钮"><a href="#2、断点间跳跃按钮" class="headerlink" title="2、断点间跳跃按钮"></a>2、断点间跳跃按钮</h4><p>以断点的方式进行的下一步</p>
<p>略</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>用Markdown写博文</title>
    <url>/2021/09/03/%E7%94%A8Markdown%E5%86%99%E5%8D%9A%E6%96%87/</url>
    <content><![CDATA[<p>&emsp;&emsp;首先，如果你能看到这博文，那么恭喜你：🎉 你正在向一个<code>进步</code>的方向前进。</p>
<p>&emsp;&emsp;什么Markdown是一种标记语言的废话我就不多说，今天我要给大家分享的是如何使用Markdown在<span style="background-color: yellow;">博客园</span>或者<span style="background-color: yellow;">基于hexo搭建的个人博客网站</span>上写博文。</p>
<span id="more"></span>

<blockquote>
<p>下面我分享的是作为博主的我，日常写博文常用的一些 Markdown语法。详细教程可以看：（<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程 | 菜鸟教程 (runoob.com)</a>）</p>
</blockquote>
<h2 id="一、博客园篇"><a href="#一、博客园篇" class="headerlink" title="一、博客园篇"></a>一、博客园篇</h2><p>&emsp;&emsp;相较于hexo，博客园对Markdown的支持还是非常棒的！</p>
<blockquote>
<p>1、 首行空两个实现方法：  &amp;emsp;&amp;emsp;</p>
<p>2、文字高亮（例如：<span style="background-color: yellow;">xxx</span>）： ==xxx==</p>
<p>3、引用（我常用于写一些比较重要的内容）： &gt; + 空格</p>
<p>4、行内代码（我常于强调励志的字词和技术栈术语，例如：<code>努力</code>,<code>javascript</code> )：`努力`  ,  `javascript`</p>
<p>5、代码块（用于引入代码，下面以引入javascript代码为例）:</p>
<p> &emsp;&emsp;             ~~~javascript</p>
<p>&emsp;&emsp;&emsp;&emsp;                                 代码内容</p>
<p>   &emsp;&emsp;           ~~~</p>
<p>6、emjoy表情（个人习惯，可以不用管，例：😄）:      <code>:happy:</code></p>
<p>7、超链接（个人觉得直接复制链接地址也不是不可以。装逼的话，例：<a href="https://www.cnblogs.com/Lencamo/">我的博客园</a> , <a href="https//lencam.cn">我的hexo博客</a> ）:</p>
<p>​     &emsp;&emsp;              [我的博客园](<a href="https://www.cnblogs.com/Lencamo/">https://www.cnblogs.com/Lencamo/</a>) , </p>
<p>​     &emsp;&emsp;              [我的hexo博客](<a href="https://lencam.cn/">https://lencam.cn/</a>)</p>
<p>8、其他： </p>
<p>   &emsp;&emsp;                ①图片： 直接Ctrl+C将图片复制过来即可</p>
<p>&emsp;&emsp;                ②加粗：Ctrl+B即可</p>
<p>&emsp;&emsp;                ③下划线：Ctrl+U即可</p>
<p>&emsp;&emsp;                ④斜体：Ctrl+I即可</p>
</blockquote>
<h2 id="二、hexo博客篇"><a href="#二、hexo博客篇" class="headerlink" title="二、hexo博客篇"></a>二、hexo博客篇</h2><p>&emsp;&emsp;和在博客园写博文一样，在hexo上写博文我也常用上面的Markdown技巧。</p>
<blockquote>
<p> 但遗憾的是hexo对:  1、<strong>文字高亮</strong>   2、<strong>emjoy表情</strong>  却不支持</p>
</blockquote>
<p>&emsp;&emsp;但总是有解决方法的</p>
<p>1、文字高亮解决办法</p>
<p>​      &emsp;&emsp;（例如：<span style="background-color: yellow;">xxx</span>）：     ==xxx==   改为  &lt;span style=”background-color: yellow;”&gt;xxx&lt;/span&gt;</p>
<p>2、emjoy表情解决办法</p>
<p>​        &emsp;&emsp;用window自带的emjoy即可，快捷键：windows键 +   。键</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建博客</title>
    <url>/2021/09/03/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p><span style="background-color: yellow;">注意</span>：下面的所有命令均在cmd中操作，并且hexo命令必须cd到自己创建的博客文件夹目录中去。</p>
</blockquote>
<h1 id="一、hexo安装"><a href="#一、hexo安装" class="headerlink" title="一、hexo安装"></a>一、hexo安装</h1><p><strong>1、git下载(<a href="https://git-scm.com/">https://git-scm.com/</a>)</strong></p>
<p>无脑下一步安装</p>
<p>git –version</p>
<p><strong>2、node.js下载(<a href="https://nodejs.org/zh-cn/">Node.js (nodejs.org)</a>)（hexo需要它的npm支持）</strong></p>
<span id="more"></span>

<p>无脑下一步安装</p>
<p>node -v</p>
<p>npm -v</p>
<p><strong>3、cnpm下载（可以更快的安装hexo镜像源及其插件）</strong></p>
<p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p>
<p>cnpm -v</p>
<p><strong>4、hexo安装</strong></p>
<p>cnpm install -g hexo-cli</p>
<p>hxeo -v</p>
<h1 id="二、hexo本地部署（4000端口）"><a href="#二、hexo本地部署（4000端口）" class="headerlink" title="二、hexo本地部署（4000端口）"></a>二、hexo本地部署（4000端口）</h1><p>​    首先在本地创建一个博客文件夹，该文件夹将包含博客所以信息。</p>
<p><strong>1、hexo初始化</strong></p>
<p>hexo init</p>
<p><strong>2、启动本地博客（start）</strong>✨</p>
<p>hexo s</p>
<p><strong>3、博文发布（generate）</strong>✨</p>
<p>hexo new “xxx”</p>
<p>hexo g</p>
<h1 id="三、hexo远程部署（GitHub）"><a href="#三、hexo远程部署（GitHub）" class="headerlink" title="三、hexo远程部署（GitHub）"></a>三、hexo远程部署（GitHub）</h1><p><strong>1、在GitHub上新建hexo仓库</strong></p>
<p>​          仓库名命名为：GitHub昵称.github.io</p>
<p><strong>2、hexo-deployer-git插件下载 （远程部署需要它的支持）</strong></p>
<p>cnpm install –save hexo-deployer-git</p>
<p><strong>3、_config.yml配置</strong></p>
<p>找到deploy：并写入</p>
<p>deploy：<br> &emsp;type：git<br> &emsp;repo：hexo仓库地址<br> &emsp;branch：master</p>
<p><strong>4、部署到GitHub（deploy）</strong>✨</p>
<p>hexo d</p>
<h1 id="四、其他"><a href="#四、其他" class="headerlink" title="四、其他"></a>四、其他</h1><h2 id="1、主题更换"><a href="#1、主题更换" class="headerlink" title="1、主题更换"></a><strong>1、主题更换</strong></h2><p><a href="https://github.com/next-theme/hexo-theme-next">GitHub - next-theme/hexo-theme-next: 🎉 Elegant and powerful theme for Hexo.</a></p>
<p>①主题下载（以next主题为例）</p>
<p><code>git clone 【主题地址】 themes/主题名</code></p>
<p>git clone <a href="https://github.com/next-theme/hexo-theme-next.git">https://github.com/next-theme/hexo-theme-next.git</a> themes/next</p>
<p>或者直接</p>
<p>npm install hexo-theme-next</p>
<p>②_config.yml配置</p>
<p>将</p>
<p>​    ##theme: landscape 改为：</p>
<p>​    theme: next</p>
<p>③使用主题</p>
<p>hexo clean（清除旧的public文件夹及缓存信息）</p>
<p>&emsp;&emsp;    hexo g（生成新的public文件夹）</p>
<p>​    &emsp;&emsp;hexo s（重新启动博客）</p>
<p>​        &emsp;&emsp;&emsp;&emsp;hexo deploy</p>
<h2 id="2、个性域名"><a href="#2、个性域名" class="headerlink" title="2、个性域名"></a><strong>2、个性域名</strong></h2><p>一路下来我们使用的域名</p>
<p>①本地部署时</p>
<p><a href="http://localhost:4000/">http://localhost:4000</a></p>
<p>②远程部署时</p>
<p><a href="https://lencamo.github.io/">https://lencamo.github.io</a></p>
<p>但作为个人网站，不得有个代表个人个性的域名： <span style="background-color: green;">nb.lsp</span>😁</p>
<p>③升级为个性域名</p>
<p>1&gt;购买域名: xxx.xx</p>
<p>1&gt;解析域名</p>
   <img src="/2021/09/03/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/域名解析.png" alt="域名解析" style="zoom: 67%;">

<p>2&gt; ./source/目录下新建<code>文本文档</code>：</p>
<p>​      CNAME文件  并写入：xxx.xx</p>
<p>3&gt; _config.yml配置</p>
<p>​    ##URL</p>
<p>​    url: 个性域名地址</p>
<p>​    ##Directory</p>
<p>​    skip_render: CNAME</p>
<p>4&gt;GitHub设置</p>
<p>​    hexo仓库 —&gt; Settings —&gt; GitHub Pages</p>
<p>​     然后点击Check it out here进入</p>
<img src="/2021/09/03/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/pages.png" alt="pages" style="zoom:80%;">

<p>​     输入个性域名地址：xxx.xx ，save保存即可</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git命令与Sourcetree的使用</title>
    <url>/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>&emsp;&emsp;很早之前就听说做为一个程序员会使用git是非常重要的，于是乎在我在早前就接触并学习了git。</p>
<blockquote>
<p>其实早期我接触git，纯粹是为了弄一个所谓的github云笔记，也就是草草了事了😂。</p>
<span id="more"></span>

<p>随着个人hexo博客的搭建，以及个人前端小项目的产生，让我对全面学习git的好奇心只增不减（虽然我的小项目根本几乎没有所谓的版本，发布后几乎没怎么改）。</p>
</blockquote>
<p>&emsp;&emsp;下面，我来简单介绍一下我对git的一些认知。涉及团队合作啥的复杂git命令我还在建议学习一下git的可视化客户端工具<span style="background-color:yellow;">Sourcetree</span>（我的前车之鉴😭，没必要用git命令来<code>装逼</code>)。</p>
<h2 id="一、仓库与版本"><a href="#一、仓库与版本" class="headerlink" title="一、仓库与版本"></a>一、仓库与版本</h2><p>&emsp;&emsp;一个项目的完成，往往会产生很多的版本，而伴随着新版本的产生，项目会变得趋于完善。</p>
<h3 id="1、仓库——（特殊的文件夹）"><a href="#1、仓库——（特殊的文件夹）" class="headerlink" title="1、仓库——（特殊的文件夹）"></a>1、仓库——（特殊的文件夹）</h3><p>&emsp;&emsp;个人理解，<u>仓库可以想象成一个<strong>特殊的文件夹</strong></u>，不同的是它可以通过git命令查看自己以前的版本项目。</p>
<blockquote>
<p>想一想，自己电脑上的文件夹，要么保存修改，要么舍弃，只能二选一；而如果把它搞成一个仓库文件夹，就不用担心这样的事情了，即使你保存了修改，任然可以通过git命令查看修改之前的版本内容。</p>
</blockquote>
<p>&emsp;&emsp;类似于软件，有不同的版本。一旦当前要开发时出现有问题，要么在仓库中找到前面的版本进行重新开发升级，要么对当前的版本进行修改。</p>
<p>&emsp;&emsp;仓库就这样，经过一次次的迭代，存放着不同的版本项目。即：<u>仓库以版本为单位进行存储</u>。</p>
<h3 id="2、自己的远程-本地仓库间联系"><a href="#2、自己的远程-本地仓库间联系" class="headerlink" title="2、自己的远程/本地仓库间联系"></a>2、自己的远程/本地仓库间联系</h3><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/gq3h0y9rx1.png" alt="gq3h0y9rx1" style="zoom:50%;">

<blockquote>
<p>Remote：远程仓库（例如：自己的GitHub仓库、码云仓库）</p>
<p>Repository：本地仓库（即我所说的特殊的文件夹）</p>
<p>workspace：工作区（即你正在编辑的版本或者当前在特殊文件夹所看到的文件版本）</p>
<br>

<p><span style="background:red; color:black; font-weight:700;">重点</span>：👀</p>
<p>index：缓存区（修改后的项目文件进入仓库前都要经过缓存区）</p>
</blockquote>
<p>&emsp;&emsp;不同的状态。</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210916165301754.png" alt="image-20210916165301754" style="zoom:50%;">

<h3 id="2、版本与分支"><a href="#2、版本与分支" class="headerlink" title="2、版本与分支"></a>2、版本与分支</h3><p>&emsp;&emsp;git是什么？——一个分布式<span style="background-color:yellow;">版本</span>控制工具。涉及团队协作时，版本控制显得尤为重要，不同团队负责不同的分支（branch），最终与master分支合并，形成一个项目版本。</p>
<p>&emsp;&emsp;当然就个人使用来看，基本上一个master分支就可以了。涉及团队协作时，往往设计多个分支（例如：bug修复分支hot_fix、开发者分支dev等等），用Sourcetree可视化客户端比较直观、方便。</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/4702b6c46c1a66c09b6a731b840e2f56.png" alt="4702b6c46c1a66c09b6a731b840e2f56" style="zoom:50%;">

<p>&emsp;&emsp;一个节点对应一个版本，一个仓库（项目）可以有多的分支；反正最后是要与master分支合并的。</p>
<h2 id="二、git的安装与基本命令"><a href="#二、git的安装与基本命令" class="headerlink" title="二、git的安装与基本命令"></a>二、git的安装与基本命令</h2><h3 id="1、git的安装与配置"><a href="#1、git的安装与配置" class="headerlink" title="1、git的安装与配置"></a>1、<a href="https://git-scm.com/">git的安装</a>与配置</h3><blockquote>
<p>git命令在Git Bash Here命令行中进行😎。</p>
<p>下面我介绍的git命令对于个人使用完全够了，即：只涉及一个master分支</p>
</blockquote>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210914223459796.png" alt="image-20210914223459796" style="zoom:50%;">

<p><strong>配置用户信息：</strong></p>
<p><code>git config --global user.name &quot;名字&quot;</code></p>
<p><code>git config - -global user.email &quot;邮箱地址&quot;</code></p>
<h3 id="2、git的基础命令"><a href="#2、git的基础命令" class="headerlink" title="2、git的基础命令"></a>2、git的基础命令</h3><p><strong>①git的查看命令：</strong></p>
<p><code>git status</code>     ✨ 查看项目文件此时的状态（在工作区、缓存区还是在仓库中）</p>
<p><code>git config --list </code>     查看全部的用户信息</p>
<p><code>git log</code>      查看所有的版本信息(例：版本ID、当前处于哪个分支)</p>
<p><code>git reflog</code>        查看所有的操作记录</p>
<p><code>git remote -v</code>       查看远程仓库库地址</p>
<p><code>git mv &lt;filename&gt; &lt;new_filename&gt; </code>        修改项目文件名字</p>
<br>

<p><strong>②专有名词：</strong></p>
<p>master：默认开发分支（最新版本的名字）</p>
<p>origin：给远程仓库地址起别名的常用名字（http方式）</p>
<p>origin_ssh：给远程仓库地址起别名的常用名字（ssh免密方式）</p>
<p>HEAD：当前所在的版本（在分支操作时，也叫没有命名的分支）</p>
<p>HEAD^ ：上一个版本</p>
<p>HEAD~n：前n个版本</p>
<p>③<strong>Linux基本命令</strong></p>
<p>pwd、mkdir、cd、*.txt 、.   、ls、rm</p>
<p>vim、cat、Ctrl+C、I键 等等</p>
<h2 id="三、git的常用命令（个人使用-）"><a href="#三、git的常用命令（个人使用-）" class="headerlink" title="三、git的常用命令（个人使用:）"></a>三、git的常用命令（个人使用:）</h2><h3 id="1、git的本地操作"><a href="#1、git的本地操作" class="headerlink" title="1、git的本地操作"></a>1、git的本地操作</h3><h4 id="1-gt-、创建本地仓库"><a href="#1-gt-、创建本地仓库" class="headerlink" title="1&gt;、创建本地仓库"></a>1&gt;、创建本地仓库</h4><p><code>git init </code>     将普通文件夹变成一个仓库文件夹</p>
<h4 id="2-gt-、提交工作区文件"><a href="#2-gt-、提交工作区文件" class="headerlink" title="2&gt;、提交工作区文件"></a>2&gt;、提交工作区文件</h4><p><code>git add &lt;filename&gt;</code>       将<strong>单个</strong>项目文件推到缓存区</p>
<p><code>git add . </code>      <strong>所有</strong>项目文件推到缓存区</p>
<br>

<p><code>git commit -m &lt;add a readme file&gt; &lt;filename&gt;</code>          将<strong>单个</strong>缓存区的项目文件推到本地仓库</p>
<p><code>git commit -m &lt;add a readme file&gt; -a</code>     <strong>所有</strong>缓冲区的项目文件推到本地仓库</p>
<blockquote>
<p>每一次commit就会生成一个节点，当然一次commit可能提交了多个项目文件，提交多个项目文件时在<code>&lt;filename&gt; </code>后面加 <code>&lt;filename2&gt;`` &lt;filename3&gt;</code> ……就可以了</p>
<p>即每发生一次commit就会生成一个版本👀</p>
</blockquote>
<h4 id="3-gt-、撤回项目文件（可继续编辑）"><a href="#3-gt-、撤回项目文件（可继续编辑）" class="headerlink" title="3&gt;、撤回项目文件（可继续编辑）"></a>3&gt;、撤回项目文件（可继续编辑）</h4><p>①工作区已修改项目文件的撤回</p>
<p><code>git checkout -- &lt;filename&gt;</code>        将<strong>工作区</strong>修改的项目文件撤回到初始状态</p>
<blockquote>
<p>即Ctrl + Z的升级版：撤销当前版本中修改后已经保存但未commit的项目文件</p>
</blockquote>
<br>

<p>②缓存区中项目文件的撤回</p>
<p><code>git reset HEAD -- &lt;filename&gt; </code>    将<strong>缓存区</strong>的项目文件撤回到工作区</p>
<p>此时回到了①的状态</p>
<p><code>git checkout -- &lt;filename&gt;</code>        将<strong>工作区</strong>修改的项目文件撤回到初始状态</p>
<blockquote>
<p>上面两个步骤的综合git命令：</p>
<p><code>git checkout HEAD -- &lt;filename&gt;</code>     ✨直接将<strong>缓存区</strong>的项目文件撤回到初始状态</p>
<p>【延展：<code>git checkout HEAD . </code>  这个表示把缓存区所有的项目文件撤回到初始状态   】</p>
</blockquote>
<br>

<p>③本地仓库中项目文件的撤回</p>
<blockquote>
<p>因为文件已经commit，所有只能<a href="#history">回滚到历史版本</a></p>
</blockquote>
<h4 id="4-gt-、比较项目文件修改前后的区别"><a href="#4-gt-、比较项目文件修改前后的区别" class="headerlink" title="4&gt;、比较项目文件修改前后的区别"></a>4&gt;、比较项目文件修改前后的区别</h4><p>①工作区与缓存区的项目文件相比较</p>
<p><code>git diff &lt;filename&gt;  </code>        单个项目文件</p>
<p><code>git diff</code>          所以项目文件</p>
<p>②缓存区与当前版本已提交的项目文件相比较</p>
<p><code>git diff HEAD &lt;filename&gt;   </code> </p>
<br>

<p>③缓存区与本地仓库历史版本的项目文件相比较</p>
<p><code>git diff &lt;版本id&gt;  &lt;filename&gt;</code></p>
<h4 id="4-gt-、删除已提交的项目文件"><a href="#4-gt-、删除已提交的项目文件" class="headerlink" title="4&gt;、删除已提交的项目文件"></a>4&gt;、删除已提交的项目文件</h4><p>①只删除工作区的项目文件</p>
<p><code>git rm &lt;delete_filename&gt;    </code>  </p>
<br>

<p>②同时删除缓存区的项目文件</p>
<p>先<code>git rm &lt;delete_filename&gt;    </code>     </p>
<p>然后 <code>git add &lt;delete_filename&gt;</code></p>
<br>

<p>③同时删除本地仓库的项目文件</p>
<p>先<code>git rm &lt;delete_filename&gt; </code>        </p>
<p>然后 <code>git add &lt;delete_filename&gt;</code></p>
<p>最后 <code>commit -m &lt;add a readme file&gt; &lt;delete_filename&gt; </code></p>
<h4 id="5-gt-、回到历史版本-找回已删除的项目文件（俗称回滚）"><a href="#5-gt-、回到历史版本-找回已删除的项目文件（俗称回滚）" class="headerlink" title="5&gt;、回到历史版本/找回已删除的项目文件（俗称回滚）"></a>5&gt;、<a id="history">回到历史版本</a>/找回已删除的项目文件（俗称回滚）</h4><p><code>git reset --hard HEAD </code>  （全部回到当前版本的初始状态）</p>
<blockquote>
<p>即 这个git命令可以找回<u>工作区、缓冲区已经删除的项目文件</u></p>
</blockquote>
<br>

<p><code>git reset --hard &lt;版本ID&gt;</code>     （<strong>工作区，缓存区、本地仓库</strong>内容全部后退到历史版本状态） </p>
<blockquote>
<p>即 这个git命令可以在历史版本中找到<u>本地仓库已经删除的项目文件</u></p>
</blockquote>
<p><code>reset --mixed &lt;版本ID&gt;</code>        （<strong>缓存区、本地仓库</strong>内容后退到历史版本状态） </p>
<p><code>reset --soft &lt;版本ID&gt;</code>          （<strong>本地仓库</strong>内容后退到历史版本状态） </p>
<h3 id="2、git的远程操作"><a href="#2、git的远程操作" class="headerlink" title="2、git的远程操作"></a>2、git的远程操作</h3><h4 id="1-gt-、本地仓库与远程仓库间的克隆"><a href="#1-gt-、本地仓库与远程仓库间的克隆" class="headerlink" title="1&gt;、本地仓库与远程仓库间的克隆"></a>1&gt;、本地仓库与远程仓库间的克隆</h4><p><code>git clone &lt;GitHub仓库地址/本地仓库目录&gt;</code>         将项目克隆一份到新的本地仓库</p>
<h4 id="2-gt-、为自己已创建的远程仓库（GitHub仓库）地址取别名"><a href="#2-gt-、为自己已创建的远程仓库（GitHub仓库）地址取别名" class="headerlink" title="2&gt;、为自己已创建的远程仓库（GitHub仓库）地址取别名"></a>2&gt;、为自己已创建的远程仓库（GitHub仓库）地址取别名</h4><p><code>git remote add origin &lt;GitHub仓库地址&gt; </code>  </p>
<blockquote>
<p>即： <code>git remote add &lt;仓库a地址别名&gt;  &lt;仓库a的地址&gt;</code></p>
<p>默认别名为 orgin</p>
</blockquote>
<h4 id="3-gt-、将本地仓库推送到自己的远程仓库"><a href="#3-gt-、将本地仓库推送到自己的远程仓库" class="headerlink" title="3&gt;、将本地仓库推送到自己的远程仓库"></a>3&gt;、将本地仓库推送到自己的远程仓库</h4><p>先  <code>git remote add origin &lt;GitHub仓库地址&gt;</code></p>
<p><span style="color: gray">// 🙏<em>git pull  origin master       将远程仓库最新的代码拉到自己的工作区[刷新 ]✨（团队合作时，远程仓库可以会有其他团队成员push了新的项目代码，防止后续自己push时产生冲突）</em>  </span></p>
<p><code>git push origin master</code>        将本地仓库推到GitHub远程仓库（origin） 【此处要录入你的GitHub账号和密码】</p>
<blockquote>
<p>即： git remote add &lt;仓库a地址别名&gt;  &lt;仓库a的地址&gt;</p>
</blockquote>
<h2 id="三、git分支相关命令（团队使用）"><a href="#三、git分支相关命令（团队使用）" class="headerlink" title="三、git分支相关命令（团队使用）"></a>三、git分支相关命令（团队使用）</h2><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/20190112114848032220.png" alt="20190112114848032220" style="zoom:50%;">

<h3 id="1、创建、切换、删除分支"><a href="#1、创建、切换、删除分支" class="headerlink" title="1、创建、切换、删除分支"></a>1、创建、切换、删除分支</h3><p><code>git branch &lt;分支名&gt;</code>       创建本地仓库分支</p>
<p><code>git checkout &lt;分支名&gt;</code>       切换本地仓库内的分支 【git checkout <strong>orign/master</strong>     切换到远程仓库的master分支】</p>
<p><code>git branch -D &lt;分支名&gt;</code>     删除本地仓库的分支</p>
<br>

<p><code>git branch -v</code>       查看所有的分支</p>
<p><code>log --oneline --decorate --graph --all</code>        查看分支结构 </p>
<blockquote>
<p>一个项目往往有许多模块，在master分支基础上创建不同的分支，让不同的团队去</p>
<p>开发不同的模块，最后与master分支进行合并，能提高开发效率。</p>
</blockquote>
<h3 id="2、合并分支"><a href="#2、合并分支" class="headerlink" title="2、合并分支"></a>2、合并分支</h3><p><code>git merge &lt;要一起合并的分支名X</code>&gt;       表示当前分支与分支X合并</p>
<h3 id="3、合并冲突"><a href="#3、合并冲突" class="headerlink" title="3、合并冲突"></a>3、合并冲突</h3><p>&emsp;&emsp;原因：当前分支的某个版本和要合并的分支某个版本，有同一个项目文件，但内容不同。</p>
<blockquote>
<p>解决方案： 修改存在冲突的项目文件内容即可</p>
<p>①要么以当前分支的内容为准&amp;emsp；&emsp;②要么以要合并的内容为准&emsp;&emsp;③要么两个都要，去掉重复内容即可</p>
</blockquote>
<p>&emsp;&emsp; 然后：</p>
<p><code>git add &lt;conflict_filename&gt;</code></p>
<p><span style="color:red;">git commit -m &lt;_add a readme file&gt; </span></p>
<p>&emsp;&emsp; 注意，🐱‍👤这里与前面的commit命令不同，commit命令后不用加文件名</p>
<h3 id="4、个人所在公司团队间git的远程操作"><a href="#4、个人所在公司团队间git的远程操作" class="headerlink" title="4、个人所在公司团队间git的远程操作"></a>4、个人所在公司团队间git的远程操作</h3><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210917101542466.png" alt="image-20210917101542466" style="zoom: 67%;">

<h4 id="1-gt-自己公司成员间的git基本操作"><a href="#1-gt-自己公司成员间的git基本操作" class="headerlink" title="1&gt;自己公司成员间的git基本操作"></a>1&gt;自己公司成员间的git基本操作</h4><p><code>git clone &lt;公司项目的远程仓库地址&gt;</code>         将远程仓库项目克隆一份到自己的本地仓库</p>
<br>

<p><code>git remote add origin &lt;GitHub仓库地址&gt;</code>       将远程仓库项目地址命名为origin</p>
<p><code>git pull  origin master</code>        将远程仓库项目（origin）拉到个人本地工作区  【相对于管理者的先fetch再margin】</p>
<p><code>git push origin master</code>        将在本地仓库中个人完成的项目内容push到远程仓库（origin）的master分支上✨【<span style="background-color:yellow;">此处要录入你的GitHub账号和密码</span>】</p>
<blockquote>
<p>①前面由于是将个人本地仓库 push 到 自己的GitHub远程仓库，登录自己的GitHub账号是可以成功的。</p>
<p>②但团队协作时，如果直接push是不会成功的，因为项目的远程仓库往往不是自己建的 ，所以要想push成功，首先要加入 <strong>项目团队</strong></p>
</blockquote>
<h4 id="2-gt-加入项目团队"><a href="#2-gt-加入项目团队" class="headerlink" title="2&gt;加入项目团队"></a>2&gt;加入项目团队</h4><p>&emsp;&emsp;首先需要项目仓库创建者（管理者）让你加入团队，并给你发送了邀请地址</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210916224913241.png" alt="image-20210916224913241" style="zoom: 33%;">

<p>&emsp;&emsp;然后，自己在GitHub上登陆自己的GitHub账号，在上面的网址栏粘贴<strong>邀请地址</strong>，同意后该项目仓库就会显示在你的GitHub里面。</p>
<h4 id="3-gt-相对于项目管理者的git命令"><a href="#3-gt-相对于项目管理者的git命令" class="headerlink" title="3&gt;相对于项目管理者的git命令"></a>3&gt;相对于项目管理者的git命令</h4><p>先抓取远程分支的 最新数据到自己的<strong>本地仓库</strong>，但工作区内容仍然没变（<u>并没有和本地仓库合并，还是当前的项目版本</u>）</p>
<p><code>git fetch origin master</code> </p>
<br>

<p>然后切换到远程仓库查看 项目内容是否有误</p>
<p><code>git checkout origin/master</code></p>
<p>cat ……</p>
<br>

<p>最后确定无误后，才将本地仓库与远程仓库合并，工作区内容也相应改变（<u>此时项目合并后数据更新，产生新的项目版本</u>）</p>
<p><code>git margin origin/master</code></p>
<h3 id="5、跨公司合作git的相关远程操作"><a href="#5、跨公司合作git的相关远程操作" class="headerlink" title="5、跨公司合作git的相关远程操作"></a>5、跨公司合作git的相关远程操作</h3><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210917103905485.png" alt="image-20210917103905485" style="zoom:67%;">

<p>&emsp;&emsp;合作公司A首先要先得到我们公司项目地址，然后fork项目到他们的GitHub中去。</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210916230114842.png" alt="image-20210916230114842" style="zoom:50%;">

<p>&emsp;&emsp;然后合作公司A自己进行项目优化，完成优化后pull request给我们的公司审核</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210916235256298.png" alt="image-20210916235256298" style="zoom: 50%;">

<p>&emsp;&emsp;我们自己的公司通过上图的pull request模块中进行检查、交流后，最后merge pull request通过申请。</p>
<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210916235541452.png" alt="image-20210916235541452" style="zoom:50%;">

<h2 id="四、ssh免密登录-单个账号"><a href="#四、ssh免密登录-单个账号" class="headerlink" title="四、ssh免密登录(单个账号)"></a>四、ssh免密登录(单个账号)</h2><p>&emsp;&emsp;通过ssh免密操作，当自己将本地仓库push到远程仓库时就不需要密码验证了。</p>
<h3 id="1、免密登录实现基础"><a href="#1、免密登录实现基础" class="headerlink" title="1、免密登录实现基础"></a>1、免密登录实现基础</h3><h4 id="1-gt-、进入用户主目录"><a href="#1-gt-、进入用户主目录" class="headerlink" title="1&gt;、进入用户主目录"></a>1&gt;、进入用户主目录</h4><p><code>cd ~</code></p>
<p><code>pwd</code></p>
<h4 id="2-gt-、通过下面的命令即可在用pwd命令得到的目录下建立一个-ssh文件"><a href="#2-gt-、通过下面的命令即可在用pwd命令得到的目录下建立一个-ssh文件" class="headerlink" title="2&gt;、通过下面的命令即可在用pwd命令得到的目录下建立一个.ssh文件"></a>2&gt;、通过下面的命令即可在用pwd命令得到的目录下建立一个.ssh文件</h4><p><code>ssh-keygen -t rsa -C &lt;个人的GitHub账号邮箱地址&gt;</code></p>
<p><code>cd ./.ssh</code></p>
<p><code>ls</code></p>
<blockquote>
<p>通过上面的命令，不仅生成了一个.ssh文件，并且该文件目录下自动生成了id_rsa和id_rsa.pub两个文件</p>
</blockquote>
<h4 id="3-gt-、复制id-rsa-pub文件里的全部秘钥内容"><a href="#3-gt-、复制id-rsa-pub文件里的全部秘钥内容" class="headerlink" title="3&gt;、复制id_rsa.pub文件里的全部秘钥内容"></a>3&gt;、复制id_rsa.pub文件里的全部秘钥内容</h4><p>在上面代码的基础上，写人下面的命令</p>
<p><code>vi id_rsa.pub</code></p>
<blockquote>
<p>通过上面的命令，得到的结果即为 <span style="background-color:yellow;">秘钥内容</span>，复制后输入命令：<code>:wq </code>即可退出</p>
</blockquote>
<h4 id="4-gt-、将秘钥内容与GitHub账号相关联"><a href="#4-gt-、将秘钥内容与GitHub账号相关联" class="headerlink" title="4&gt;、将秘钥内容与GitHub账号相关联"></a>4&gt;、将秘钥内容与GitHub账号相关联</h4><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210917111533900.png" alt="image-20210917111533900" style="zoom:50%;">

<img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210917113434860.png" alt="image-20210917113434860" style="zoom: 50%;">

<h3 id="2、ssh免密登录方式的使用"><a href="#2、ssh免密登录方式的使用" class="headerlink" title="2、ssh免密登录方式的使用"></a>2、ssh免密登录方式的使用</h3><h4 id="1-gt-、为项目仓库地址添加一个ssh地址别名"><a href="#1-gt-、为项目仓库地址添加一个ssh地址别名" class="headerlink" title="1&gt;、为项目仓库地址添加一个ssh地址别名"></a>1&gt;、为项目仓库地址添加一个ssh地址别名</h4><p><code>git remote add origin_ssh &lt;远程项目仓库的ssh地址&gt;</code></p>
<p><code>git push origin_ssh master</code></p>
<blockquote>
<p>即：git命令和前面的一样，只是涉及origin时，将origin改为origin_ssh即可</p>
</blockquote>
<h2 id="五、Sourcetree客户端"><a href="#五、Sourcetree客户端" class="headerlink" title="五、Sourcetree客户端"></a>五、Sourcetree客户端</h2><img src="/2021/09/17/git%E5%91%BD%E4%BB%A4%E4%B8%8ESourcetree%E7%9A%84%E4%BD%BF%E7%94%A8/image-20210915131512142.png" alt="image-20210915131512142" style="zoom:50%;">

<blockquote>
<p>注意：  ①使用分支时，不能有未提交文件的分支。</p>
</blockquote>
<h3 id="1、重置到当前分支到此次提交"><a href="#1、重置到当前分支到此次提交" class="headerlink" title="1、重置到当前分支到此次提交"></a>1、重置到当前分支到此次提交</h3><p>&emsp;&emsp; &emsp;&emsp; —-&gt; 通常选择强制合并</p>
<h3 id="2、回滚提交"><a href="#2、回滚提交" class="headerlink" title="2、回滚提交"></a>2、回滚提交</h3><p>&emsp;&emsp; &emsp;&emsp;—-&gt;操作自动合并master分支问题</p>
<h3 id="3、查看历史版本"><a href="#3、查看历史版本" class="headerlink" title="3、查看历史版本"></a>3、查看历史版本</h3><p>&emsp;&emsp; &emsp;&emsp;—-&gt;双击即可查看的历史节点（前提：当前没有未提交的修改文件）</p>
<h3 id="4、修改历史版本并创建新的分支"><a href="#4、修改历史版本并创建新的分支" class="headerlink" title="4、修改历史版本并创建新的分支"></a>4、修改历史版本并创建新的分支</h3><p>&emsp;&emsp; &emsp;&emsp;—-&gt;创建新的分支（前提：要给它命名）</p>
<h3 id="5、分支合并💖"><a href="#5、分支合并💖" class="headerlink" title="5、分支合并💖"></a>5、分支合并💖</h3><p>&emsp;&emsp; &emsp;&emsp;—-&gt;最后一定会发生</p>
<h3 id="6、合并冲突🤔"><a href="#6、合并冲突🤔" class="headerlink" title="6、合并冲突🤔"></a>6、合并冲突🤔</h3><p>&emsp;&emsp; &emsp;&emsp;—-&gt;呵呵，我懂就行</p>
<br>

<h2 id="五、友情提示："><a href="#五、友情提示：" class="headerlink" title="五、友情提示："></a>五、友情提示：</h2><p>​         &emsp;&emsp;<a href="https://gitee.com/all-about-git">软件、插件下载</a></p>
<p>​        &emsp;&emsp; <a href="https://www.bootcss.com/p/git-guide/">git命令学习文档</a></p>
<p>​         &emsp;&emsp;<a href="https://www.bilibili.com/video/BV1qg41177Dd?from=search&seid=1835252203833884066&spm_id_from=333.337.0.0">Sourcetree学习视频</a></p>
<p>​         &emsp;&emsp;<a href="https://www.bilibili.com/video/BV17o4y1Q7Sx?p=1">git的学习视频</a></p>
<blockquote>
<p>更多内容，欢迎🎉🎉光临<a href="https://github.com/Lencamo">https://github.com/Lencamo</a></p>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git与GitHub</tag>
      </tags>
  </entry>
</search>
